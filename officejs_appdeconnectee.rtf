{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab708
\pard\pardeftab708\ri-386\partightenfactor0

\f0\fs20 \cf0 /*jslint nomen: true, indent: 2, maxerr: 3, maxlen: 80*/\
/*global self, caches, fetch*/\
(function (self, caches, fetch) \{\
  "use strict";\
\
  var CACHE_VERSION = 1,\
    CACHE_NAME = "todos-renderjs-" + CACHE_VERSION.toString();\
  self.addEventListener("install", function (event) \{\
    event.waitUntil(caches.open(CACHE_NAME)\
      .then(function (cache) \{\
\'a0       // Ici on ajoute les pages que l'on utilise  en cache\
        return cache.addAll([\
          "./",\
          "rsvp.js",\
          "renderjs.js",\
          "jio.js",\
          "handlebars.js",\
          //"launcher_icon.png",\
          "base.css",\
          "index.css",\
          "index.html",\
          "index.js",\
          "gadget_global.js",\
          "gadget_model.html",\
          "gadget_model.js"\
        ]);\
      \})\
      .then(function () \{\
        return self.skipWaiting();\
      \}));\
  \});\
\
  self.addEventListener("fetch", function (event) \{\
    event.respondWith(caches.match(event.request)\
      .then(function (response) \{\
        return response || fetch(event.request);\
      \}));\
  \});\
\
  self.addEventListener("activate", function (event) \{\
    event.waitUntil(caches.keys()\
      .then(function (keys) \{\
        return Promise.all(keys\
          .filter(function (key) \{\
            return key !== CACHE_NAME;\
          \})\
          .map(function (key) \{\
            return caches.delete(key);\
          \}));\
      \})\
      .then(function () \{\
        self.clients.claim();\
      \}));\
  \});\
\
\}(self, caches, fetch));\
}